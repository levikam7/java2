package snake;

import java.io.PrintStream;

import snake.Coordinate;
import ui.Event;
import ui.SnakeUserInterface;
import ui.UIAuxiliaryMethods;
import ui.UserInterfaceFactory;
import snake.CoordinateRow;


class Snake {

	// Name	:Levi
	// Assignment : Snake
	// Date :25-11-2015

	static final int X_AS = 32;
	static final int Y_AS = 24;
	static final int FRAMESPERSECOND = 5;
	static final int SNAKE = 2;


	Coordinate head = new Coordinate(1,0);
	Coordinate direction = new Coordinate(1,0);
	Coordinate food;
	Coordinate randomFood;
	CoordinateRow snake;
	CoordinateRow snakeRow = new CoordinateRow();

	SnakeUserInterface ui;
	PrintStream out;

	int x = 1,y = 0;
	int score = 0;
	int xFood;
	int yFood;
	int Counter = 0;


	Snake () {
		ui = UserInterfaceFactory.getSnakeUI(X_AS, Y_AS);
	}

	void placeSnake () {
		direction = new Coordinate(1,0);
		Coordinate tail =  new Coordinate(0,0);
		snake = new CoordinateRow();

		snake.addInFront(tail);
		snake.addInFront(head);

		showSnake(snake);
		ui.showChanges();

	}
	
	

	void showSnake (CoordinateRow row) {
		ui.clear();
		for(int i = 0 ; i < row.numberOfElements; i++) {
			ui.place(row.row[i].x, row.row[i].y, SNAKE);
		}
	}

	void processEvent (Event event) {

		if (event.name.equals("arrow")) {
			processKey (event.data);
			
		}
		if (event.name.equals("alarm")) {
			processMovement ();
		}
	}

	void processKey (String data) {
		if (data.equals("L")) {
			if (direction.x == 1 && direction.y == 0) {}
			else { direction = new Coordinate(-1,0); }
		}
		else if (data.equals("R")) {
			if (direction.x == -1 && direction.y == 0) {}
			else { direction = new Coordinate(1,0); }
		}     
		else if (data.equals("U")) {
			if (direction.x == 0 && direction.y == 1) {}
			else { direction = new Coordinate(0,-1); }
		}     
		else if (data.equals("D")) {
			if (direction.x == 0 && direction.y == -1) {}
			else { direction = new Coordinate(0,1); }
		}

	}


	void processMovement () {		
		x += direction.x;
		y += direction.y;
		Coordinate head = new Coordinate(x,y);

		snake.changeInFront(head);
		showSnake(snake);
		

		checkSnakeCollision (head);
		checkApple(head);
		ui.showChanges();
		
		Counter++;
	}


	

	void checkSnakeCollision (Coordinate head) {
		if (head.x == x && head.y == y) {
			ui.printf("Game Over!! Eindscore: %d\n", score);
			ui.setFramesPerSecond(0);
		}

	}

	void checkApple(Coordinate head) {
		if (Counter == 1) {
			int xCoordinate =  UIAuxiliaryMethods.getRandom(0,X_AS);
			int yCoordinate =  UIAuxiliaryMethods.getRandom(0,Y_AS);
			ui.place(xCoordinate, yCoordinate, SnakeUserInterface.FOOD);
		}
		if (xFood == head.x && yFood == head.y) {
			snake.addInFront(food);
			ui.place(xFood, yFood, ui.FOOD);
			score++;
			int xRandom, yRandom;
			do {
				xRandom = UIAuxiliaryMethods.getRandom(0,X_AS);
				yRandom = UIAuxiliaryMethods.getRandom(0,Y_AS);
				randomFood = new Coordinate(xRandom,yRandom);
			}
			while (snake.containsCoordinate(randomFood));
			xFood = xRandom;
			yFood = yRandom;
			food = new Coordinate(xFood,yFood);
			ui.place(food.x,food.y,ui.FOOD);
		}
		ui.showChanges();
	}



	void start () {

		placeSnake ();

		while (true) {
			ui.setFramesPerSecond(FRAMESPERSECOND);
			Event event = ui.getEvent();
			processEvent(event);

		}

	}

	public static void main(String[] args) {
		new Snake().start();
	}
}
